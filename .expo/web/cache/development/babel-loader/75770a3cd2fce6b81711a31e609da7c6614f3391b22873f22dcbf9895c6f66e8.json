{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { getDefaultSidebarWidth, getLabel, MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkTools, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BottomTabBarHeightCallbackContext } from \"../utils/BottomTabBarHeightCallbackContext\";\nimport { useIsKeyboardShown } from \"../utils/useIsKeyboardShown\";\nimport { BottomTabItem } from \"./BottomTabItem\";\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar SPACING = 5;\nvar useNativeDriver = Platform.OS !== 'web';\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    layout = _ref.layout,\n    dimensions = _ref.dimensions;\n  var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    var maxTabWidth = state.routes.reduce(function (acc, route) {\n      var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;\n      var flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\nexport var getTabBarHeight = function getTabBarHeight(_ref2) {\n  var state = _ref2.state,\n    descriptors = _ref2.descriptors,\n    dimensions = _ref2.dimensions,\n    insets = _ref2.insets,\n    style = _ref2.style,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var flattenedStyle = StyleSheet.flatten(style);\n  var customHeight = flattenedStyle && 'height' in flattenedStyle ? flattenedStyle.height : undefined;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport function BottomTabBar(_ref3) {\n  var state = _ref3.state,\n    navigation = _ref3.navigation,\n    descriptors = _ref3.descriptors,\n    insets = _ref3.insets,\n    style = _ref3.style;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var _useLinkTools = useLinkTools(),\n    buildHref = _useLinkTools.buildHref;\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var _focusedOptions$tabBa = focusedOptions.tabBarPosition,\n    tabBarPosition = _focusedOptions$tabBa === void 0 ? 'bottom' : _focusedOptions$tabBa,\n    tabBarShowLabel = focusedOptions.tabBarShowLabel,\n    _focusedOptions$tabBa2 = focusedOptions.tabBarHideOnKeyboard,\n    tabBarHideOnKeyboard = _focusedOptions$tabBa2 === void 0 ? false : _focusedOptions$tabBa2,\n    tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig,\n    tabBarStyle = focusedOptions.tabBarStyle,\n    tabBarBackground = focusedOptions.tabBarBackground,\n    tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor,\n    tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor,\n    _focusedOptions$tabBa3 = focusedOptions.tabBarActiveBackgroundColor,\n    tabBarActiveBackgroundColor = _focusedOptions$tabBa3 === void 0 ? tabBarPosition !== 'bottom' ? Color(tabBarActiveTintColor != null ? tabBarActiveTintColor : colors.primary).alpha(0.12).rgb().string() : undefined : _focusedOptions$tabBa3,\n    tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;\n  var dimensions = useWindowDimensions();\n  var isKeyboardShown = useIsKeyboardShown();\n  var onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  var visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(function () {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  var _React$useState = React.useState(!shouldShowTabBar),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isTabBarHidden = _React$useState2[0],\n    setIsTabBarHidden = _React$useState2[1];\n  var _React$useState3 = React.useState(function () {\n      return new Animated.Value(shouldShowTabBar ? 1 : 0);\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    visible = _React$useState4[0];\n  React.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      var animation = (visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) == null ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) == null ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      var _animation = (visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) == null ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig == null ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) == null ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n    return function () {\n      return visible.stopAnimation();\n    };\n  }, [visible, shouldShowTabBar]);\n  var _React$useState5 = React.useState({\n      height: 0,\n      width: dimensions.width\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    layout = _React$useState6[0],\n    setLayout = _React$useState6[1];\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n      height = _e$nativeEvent$layout.height,\n      width = _e$nativeEvent$layout.width;\n    onHeightChange == null ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n  var routes = state.routes;\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    descriptors: descriptors,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    style: [tabBarStyle, style]\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions,\n    layout: layout\n  });\n  var tabBarBackgroundElement = tabBarBackground == null ? void 0 : tabBarBackground();\n  return React.createElement(Animated.View, {\n    style: [tabBarPosition === 'left' ? styles.left : tabBarPosition === 'right' ? styles.right : styles.bottom, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderColor: colors.border\n    }, tabBarPosition === 'bottom' ? [{\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : undefined\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }] : {\n      paddingTop: insets.top,\n      paddingBottom: insets.bottom,\n      paddingLeft: tabBarPosition === 'left' ? insets.left : 0,\n      paddingRight: tabBarPosition === 'right' ? insets.right : 0,\n      minWidth: hasHorizontalLabels ? getDefaultSidebarWidth(dimensions) : 0\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: tabBarPosition === 'bottom' ? handleLayout : undefined\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: tabBarPosition === 'bottom' ? styles.bottomContent : styles.sideContent\n  }, routes.map(function (route, index) {\n    var _options$tabBarIcon;\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate(route)), {}, {\n          target: state.key\n        }));\n      }\n    };\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    var label = typeof options.tabBarLabel === 'function' ? options.tabBarLabel : getLabel({\n      label: options.tabBarLabel,\n      title: options.title\n    }, route.name);\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? `${label}, tab, ${index + 1} of ${routes.length}` : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      href: buildHref(route.name, route.params),\n      route: route,\n      descriptor: descriptors[route.key],\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      testID: options.tabBarButtonTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: (_options$tabBarIcon = options.tabBarIcon) != null ? _options$tabBarIcon : function (_ref5) {\n        var color = _ref5.color,\n          size = _ref5.size;\n        return React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      },\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: [tabBarPosition === 'bottom' ? styles.bottomItem : [styles.sideItem, hasHorizontalLabels ? {\n        justifyContent: 'flex-start'\n      } : null], options.tabBarItemStyle]\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  left: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    borderRightWidth: StyleSheet.hairlineWidth\n  },\n  right: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    borderLeftWidth: StyleSheet.hairlineWidth\n  },\n  bottom: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  bottomContent: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  sideContent: {\n    flex: 1,\n    flexDirection: 'column',\n    padding: SPACING\n  },\n  bottomItem: {\n    flex: 1\n  },\n  sideItem: {\n    margin: SPACING,\n    padding: SPACING * 2,\n    borderRadius: 4\n  }\n});","map":{"version":3,"names":["getDefaultSidebarWidth","getLabel","MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkTools","useTheme","Color","React","Animated","Platform","StyleSheet","useWindowDimensions","View","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","SPACING","useNativeDriver","OS","shouldUseHorizontalLabels","_ref","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","_ref2","style","rest","_objectWithoutProperties","_excluded","customHeight","undefined","isLandscape","horizontalLabels","_objectSpread","paddingBottom","isPad","BottomTabBar","_ref3","navigation","_useTheme","colors","_useLinkTools","buildHref","focusedRoute","focusedDescriptor","focusedOptions","_focusedOptions$tabBa","tabBarPosition","tabBarShowLabel","_focusedOptions$tabBa2","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","_focusedOptions$tabBa3","tabBarActiveBackgroundColor","primary","alpha","rgb","string","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","_React$useState","useState","_React$useState2","_slicedToArray","isTabBarHidden","setIsTabBarHidden","_React$useState3","Value","_React$useState4","visible","visibilityAnimationConfig","_visibilityAnimationC","_visibilityAnimationC2","animation","show","spring","timing","toValue","duration","config","start","_ref4","finished","_visibilityAnimationC3","_visibilityAnimationC4","hide","stopAnimation","_React$useState5","_React$useState6","setLayout","handleLayout","e","_e$nativeEvent$layout","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","createElement","styles","left","right","backgroundColor","card","borderColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","paddingTop","top","paddingLeft","paddingRight","minWidth","pointerEvents","onLayout","absoluteFill","accessibilityRole","bottomContent","sideContent","map","_options$tabBarIcon","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","onLongPress","label","tabBarLabel","title","name","accessibilityLabel","tabBarAccessibilityLabel","length","Provider","value","href","params","descriptor","horizontal","testID","tabBarButtonTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","_ref5","color","size","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","bottomItem","sideItem","justifyContent","create","borderRightWidth","borderLeftWidth","borderTopWidth","elevation","flex","flexDirection","padding","margin","borderRadius"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabBar.tsx"],"sourcesContent":["import {\n  getDefaultSidebarWidth,\n  getLabel,\n  MissingIcon,\n} from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  type ParamListBase,\n  type TabNavigationState,\n  useLinkTools,\n  useTheme,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport {\n  Animated,\n  type LayoutChangeEvent,\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  useWindowDimensions,\n  View,\n  type ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport { BottomTabBarHeightCallbackContext } from '../utils/BottomTabBarHeightCallbackContext';\nimport { useIsKeyboardShown } from '../utils/useIsKeyboardShown';\nimport { BottomTabItem } from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst SPACING = 5;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  const flattenedStyle = StyleSheet.flatten(style);\n  const customHeight =\n    flattenedStyle && 'height' in flattenedStyle\n      ? flattenedStyle.height\n      : undefined;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const { buildHref } = useLinkTools();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarPosition = 'bottom',\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor = tabBarPosition !== 'bottom'\n      ? Color(tabBarActiveTintColor ?? colors.primary)\n          .alpha(0.12)\n          .rgb()\n          .string()\n      : undefined,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  // FIXME: useSafeAreaFrame doesn't update values when window is resized on Web\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        tabBarPosition === 'left'\n          ? styles.left\n          : tabBarPosition === 'right'\n          ? styles.right\n          : styles.bottom,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderColor: colors.border,\n        },\n        tabBarPosition === 'bottom'\n          ? [\n              {\n                transform: [\n                  {\n                    translateY: visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [\n                        layout.height +\n                          paddingBottom +\n                          StyleSheet.hairlineWidth,\n                        0,\n                      ],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: isTabBarHidden ? 'absolute' : undefined,\n              },\n              {\n                height: tabBarHeight,\n                paddingBottom,\n                paddingHorizontal: Math.max(insets.left, insets.right),\n              },\n            ]\n          : {\n              paddingTop: insets.top,\n              paddingBottom: insets.bottom,\n              paddingLeft: tabBarPosition === 'left' ? insets.left : 0,\n              paddingRight: tabBarPosition === 'right' ? insets.right : 0,\n              minWidth: hasHorizontalLabels\n                ? getDefaultSidebarWidth(dimensions)\n                : 0,\n            },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={tabBarPosition === 'bottom' ? handleLayout : undefined}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View\n        accessibilityRole=\"tablist\"\n        style={\n          tabBarPosition === 'bottom'\n            ? styles.bottomContent\n            : styles.sideContent\n        }\n      >\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            typeof options.tabBarLabel === 'function'\n              ? options.tabBarLabel\n              : getLabel(\n                  { label: options.tabBarLabel, title: options.title },\n                  route.name\n                );\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  href={buildHref(route.name, route.params)}\n                  route={route}\n                  descriptor={descriptors[route.key]}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  testID={options.tabBarButtonTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={[\n                    tabBarPosition === 'bottom'\n                      ? styles.bottomItem\n                      : [\n                          styles.sideItem,\n                          hasHorizontalLabels\n                            ? { justifyContent: 'flex-start' }\n                            : null,\n                        ],\n                    options.tabBarItemStyle,\n                  ]}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  left: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    borderRightWidth: StyleSheet.hairlineWidth,\n  },\n  right: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    borderLeftWidth: StyleSheet.hairlineWidth,\n  },\n  bottom: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  bottomContent: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  sideContent: {\n    flex: 1,\n    flexDirection: 'column',\n    padding: SPACING,\n  },\n  bottomItem: {\n    flex: 1,\n  },\n  sideItem: {\n    margin: SPACING,\n    padding: SPACING * 2,\n    borderRadius: 4,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { getHeaderTitle, Header, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport { BottomTabBarHeightCallbackContext } from \"../utils/BottomTabBarHeightCallbackContext\";\nimport { BottomTabBarHeightContext } from \"../utils/BottomTabBarHeightContext\";\nimport { useAnimatedHashMap } from \"../utils/useAnimatedHashMap\";\nimport { BottomTabBar, getTabBarHeight } from \"./BottomTabBar\";\nimport { MaybeScreen, MaybeScreenContainer } from \"./ScreenFallback\";\nvar EPSILON = 1e-5;\nvar STATE_INACTIVE = 0;\nvar STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nvar STATE_ON_TOP = 2;\nvar hasAnimation = function hasAnimation(options) {\n  var animationEnabled = options.animationEnabled,\n    transitionSpec = options.transitionSpec;\n  if (animationEnabled === false || !transitionSpec) {\n    return false;\n  }\n  return true;\n};\nexport function BottomTabView(props) {\n  var _props$tabBar = props.tabBar,\n    tabBar = _props$tabBar === void 0 ? function (props) {\n      return React.createElement(BottomTabBar, props);\n    } : _props$tabBar,\n    state = props.state,\n    navigation = props.navigation,\n    descriptors = props.descriptors,\n    safeAreaInsets = props.safeAreaInsets,\n    _props$detachInactive = props.detachInactiveScreens,\n    detachInactiveScreens = _props$detachInactive === void 0 ? Platform.OS === 'web' || Platform.OS === 'android' || Platform.OS === 'ios' : _props$detachInactive,\n    sceneContainerStyle = props.sceneContainerStyle;\n  var focusedRouteKey = state.routes[state.index].key;\n  var _React$useState = React.useState([focusedRouteKey]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loaded = _React$useState2[0],\n    setLoaded = _React$useState2[1];\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([].concat(_toConsumableArray(loaded), [focusedRouteKey]));\n  }\n  var tabAnims = useAnimatedHashMap(state);\n  React.useEffect(function () {\n    var animateToIndex = function animateToIndex() {\n      Animated.parallel(state.routes.map(function (route, index) {\n        var options = descriptors[route.key].options;\n        var transitionSpec = options.transitionSpec;\n        var animationEnabled = hasAnimation(options);\n        var toValue = index === state.index ? 0 : index >= state.index ? 1 : -1;\n        if (!animationEnabled || !transitionSpec) {\n          return Animated.timing(tabAnims[route.key], {\n            toValue: toValue,\n            duration: 0,\n            useNativeDriver: true\n          });\n        }\n        return Animated[transitionSpec.animation](tabAnims[route.key], _objectSpread(_objectSpread({}, transitionSpec.config), {}, {\n          toValue: toValue,\n          useNativeDriver: true\n        }));\n      }).filter(Boolean)).start();\n    };\n    animateToIndex();\n  }, [descriptors, state.index, state.routes, tabAnims]);\n  var dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  var _React$useState3 = React.useState(function () {\n      return getTabBarHeight({\n        state: state,\n        descriptors: descriptors,\n        dimensions: dimensions,\n        layout: {\n          width: dimensions.width,\n          height: 0\n        },\n        insets: _objectSpread(_objectSpread({}, SafeAreaProviderCompat.initialMetrics.insets), props.safeAreaInsets),\n        style: descriptors[state.routes[state.index].key].options.tabBarStyle\n      });\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    tabBarHeight = _React$useState4[0],\n    setTabBarHeight = _React$useState4[1];\n  var renderTabBar = function renderTabBar() {\n    return React.createElement(SafeAreaInsetsContext.Consumer, null, function (insets) {\n      var _ref2, _safeAreaInsets$top, _ref3, _safeAreaInsets$right, _ref4, _safeAreaInsets$botto, _ref5, _safeAreaInsets$left;\n      return tabBar({\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation,\n        insets: {\n          top: (_ref2 = (_safeAreaInsets$top = safeAreaInsets == null ? void 0 : safeAreaInsets.top) != null ? _safeAreaInsets$top : insets == null ? void 0 : insets.top) != null ? _ref2 : 0,\n          right: (_ref3 = (_safeAreaInsets$right = safeAreaInsets == null ? void 0 : safeAreaInsets.right) != null ? _safeAreaInsets$right : insets == null ? void 0 : insets.right) != null ? _ref3 : 0,\n          bottom: (_ref4 = (_safeAreaInsets$botto = safeAreaInsets == null ? void 0 : safeAreaInsets.bottom) != null ? _safeAreaInsets$botto : insets == null ? void 0 : insets.bottom) != null ? _ref4 : 0,\n          left: (_ref5 = (_safeAreaInsets$left = safeAreaInsets == null ? void 0 : safeAreaInsets.left) != null ? _safeAreaInsets$left : insets == null ? void 0 : insets.left) != null ? _ref5 : 0\n        }\n      });\n    });\n  };\n  var routes = state.routes;\n  var hasTwoStates = !routes.some(function (route) {\n    return hasAnimation(descriptors[route.key].options);\n  });\n  var _descriptors$focusedR = descriptors[focusedRouteKey].options.tabBarPosition,\n    tabBarPosition = _descriptors$focusedR === void 0 ? 'bottom' : _descriptors$focusedR;\n  return React.createElement(SafeAreaProviderCompat, {\n    style: tabBarPosition === 'left' ? styles.left : tabBarPosition === 'right' ? styles.right : null\n  }, React.createElement(MaybeScreenContainer, {\n    enabled: detachInactiveScreens,\n    hasTwoStates: hasTwoStates,\n    style: styles.screens\n  }, routes.map(function (route, index) {\n    var _sceneStyleInterpolat;\n    var descriptor = descriptors[route.key];\n    var _descriptor$options = descriptor.options,\n      _descriptor$options$l = _descriptor$options.lazy,\n      lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,\n      unmountOnBlur = _descriptor$options.unmountOnBlur,\n      sceneStyleInterpolator = _descriptor$options.sceneStyleInterpolator;\n    var isFocused = state.index === index;\n    if (unmountOnBlur && !isFocused) {\n      return null;\n    }\n    if (lazy && !loaded.includes(route.key) && !isFocused) {\n      return null;\n    }\n    var _descriptor$options2 = descriptor.options,\n      freezeOnBlur = _descriptor$options2.freezeOnBlur,\n      _descriptor$options2$ = _descriptor$options2.header,\n      header = _descriptor$options2$ === void 0 ? function (_ref) {\n        var layout = _ref.layout,\n          options = _ref.options;\n        return React.createElement(Header, _extends({}, options, {\n          layout: layout,\n          title: getHeaderTitle(options, route.name)\n        }));\n      } : _descriptor$options2$,\n      headerShown = _descriptor$options2.headerShown,\n      headerStatusBarHeight = _descriptor$options2.headerStatusBarHeight,\n      headerTransparent = _descriptor$options2.headerTransparent;\n    var _ref6 = (_sceneStyleInterpolat = sceneStyleInterpolator == null ? void 0 : sceneStyleInterpolator({\n        current: tabAnims[route.key]\n      })) != null ? _sceneStyleInterpolat : {},\n      sceneStyle = _ref6.sceneStyle;\n    var animationEnabled = hasAnimation(descriptor.options);\n    var activityState = isFocused ? STATE_ON_TOP : animationEnabled ? tabAnims[route.key].interpolate({\n      inputRange: [0, 1 - EPSILON, 1],\n      outputRange: [STATE_TRANSITIONING_OR_BELOW_TOP, STATE_TRANSITIONING_OR_BELOW_TOP, STATE_INACTIVE],\n      extrapolate: 'extend'\n    }) : STATE_INACTIVE;\n    return React.createElement(MaybeScreen, {\n      key: route.key,\n      style: [StyleSheet.absoluteFill, {\n        zIndex: isFocused ? 0 : -1\n      }],\n      active: activityState,\n      enabled: detachInactiveScreens,\n      freezeOnBlur: freezeOnBlur\n    }, React.createElement(BottomTabBarHeightContext.Provider, {\n      value: tabBarPosition === 'bottom' ? tabBarHeight : 0\n    }, React.createElement(Screen, {\n      focused: isFocused,\n      route: descriptor.route,\n      navigation: descriptor.navigation,\n      headerShown: headerShown,\n      headerStatusBarHeight: headerStatusBarHeight,\n      headerTransparent: headerTransparent,\n      header: header({\n        layout: dimensions,\n        route: descriptor.route,\n        navigation: descriptor.navigation,\n        options: descriptor.options\n      }),\n      style: [sceneContainerStyle, animationEnabled && sceneStyle]\n    }, descriptor.render())));\n  })), React.createElement(BottomTabBarHeightCallbackContext.Provider, {\n    value: setTabBarHeight\n  }, renderTabBar()));\n}\nvar styles = StyleSheet.create({\n  left: {\n    flexDirection: 'row-reverse'\n  },\n  right: {\n    flexDirection: 'row'\n  },\n  screens: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","React","Animated","Platform","StyleSheet","SafeAreaInsetsContext","BottomTabBarHeightCallbackContext","BottomTabBarHeightContext","useAnimatedHashMap","BottomTabBar","getTabBarHeight","MaybeScreen","MaybeScreenContainer","EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","hasAnimation","options","animationEnabled","transitionSpec","BottomTabView","props","_props$tabBar","tabBar","createElement","state","navigation","descriptors","safeAreaInsets","_props$detachInactive","detachInactiveScreens","OS","sceneContainerStyle","focusedRouteKey","routes","index","key","_React$useState","useState","_React$useState2","_slicedToArray","loaded","setLoaded","includes","concat","_toConsumableArray","tabAnims","useEffect","animateToIndex","parallel","map","route","toValue","timing","duration","useNativeDriver","animation","_objectSpread","config","filter","Boolean","start","dimensions","initialMetrics","frame","_React$useState3","layout","width","height","insets","style","tabBarStyle","_React$useState4","tabBarHeight","setTabBarHeight","renderTabBar","Consumer","_ref2","_safeAreaInsets$top","_ref3","_safeAreaInsets$right","_ref4","_safeAreaInsets$botto","_ref5","_safeAreaInsets$left","top","right","bottom","left","hasTwoStates","some","_descriptors$focusedR","tabBarPosition","styles","enabled","screens","_sceneStyleInterpolat","descriptor","_descriptor$options","_descriptor$options$l","lazy","unmountOnBlur","sceneStyleInterpolator","isFocused","_descriptor$options2","freezeOnBlur","_descriptor$options2$","header","_ref","_extends","title","name","headerShown","headerStatusBarHeight","headerTransparent","_ref6","current","sceneStyle","activityState","interpolate","inputRange","outputRange","extrapolate","absoluteFill","zIndex","active","Provider","value","focused","render","create","flexDirection","flex","overflow"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  TabNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabHeaderProps,\n  BottomTabNavigationConfig,\n  BottomTabNavigationHelpers,\n  BottomTabNavigationOptions,\n  BottomTabNavigationProp,\n} from '../types';\nimport { BottomTabBarHeightCallbackContext } from '../utils/BottomTabBarHeightCallbackContext';\nimport { BottomTabBarHeightContext } from '../utils/BottomTabBarHeightContext';\nimport { useAnimatedHashMap } from '../utils/useAnimatedHashMap';\nimport { BottomTabBar, getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\nconst EPSILON = 1e-5;\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\n\nconst hasAnimation = (options: BottomTabNavigationOptions) => {\n  const { animationEnabled, transitionSpec } = options;\n\n  if (animationEnabled === false || !transitionSpec) {\n    return false;\n  }\n\n  return true;\n};\n\nexport function BottomTabView(props: Props) {\n  const {\n    tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' ||\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios',\n    sceneContainerStyle,\n  } = props;\n  const focusedRouteKey = state.routes[state.index].key;\n\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const tabAnims = useAnimatedHashMap(state);\n\n  React.useEffect(() => {\n    const animateToIndex = () => {\n      Animated.parallel(\n        state.routes\n          .map((route, index) => {\n            const { options } = descriptors[route.key];\n            const { transitionSpec } = options;\n\n            const animationEnabled = hasAnimation(options);\n\n            const toValue =\n              index === state.index ? 0 : index >= state.index ? 1 : -1;\n\n            if (!animationEnabled || !transitionSpec) {\n              return Animated.timing(tabAnims[route.key], {\n                toValue,\n                duration: 0,\n                useNativeDriver: true,\n              });\n            }\n\n            return Animated[transitionSpec.animation](tabAnims[route.key], {\n              ...transitionSpec.config,\n              toValue,\n              useNativeDriver: true,\n            });\n          })\n          .filter(Boolean) as Animated.CompositeAnimation[]\n      ).start();\n    };\n\n    animateToIndex();\n  }, [descriptors, state.index, state.routes, tabAnims]);\n\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() =>\n    getTabBarHeight({\n      state,\n      descriptors,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: {\n        ...SafeAreaProviderCompat.initialMetrics.insets,\n        ...props.safeAreaInsets,\n      },\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle,\n    })\n  );\n\n  const renderTabBar = () => {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {(insets) =>\n          tabBar({\n            state: state,\n            descriptors: descriptors,\n            navigation: navigation,\n            insets: {\n              top: safeAreaInsets?.top ?? insets?.top ?? 0,\n              right: safeAreaInsets?.right ?? insets?.right ?? 0,\n              bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n              left: safeAreaInsets?.left ?? insets?.left ?? 0,\n            },\n          })\n        }\n      </SafeAreaInsetsContext.Consumer>\n    );\n  };\n\n  const { routes } = state;\n\n  // If there is no animation, we only have 2 states: visible and invisible\n  const hasTwoStates = !routes.some((route) =>\n    hasAnimation(descriptors[route.key].options)\n  );\n\n  const { tabBarPosition = 'bottom' } = descriptors[focusedRouteKey].options;\n\n  return (\n    <SafeAreaProviderCompat\n      style={\n        tabBarPosition === 'left'\n          ? styles.left\n          : tabBarPosition === 'right'\n          ? styles.right\n          : null\n      }\n    >\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates={hasTwoStates}\n        style={styles.screens}\n      >\n        {routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const {\n            lazy = true,\n            unmountOnBlur,\n            sceneStyleInterpolator,\n          } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            freezeOnBlur,\n            header = ({ layout, options }: BottomTabHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n              />\n            ),\n            headerShown,\n            headerStatusBarHeight,\n            headerTransparent,\n          } = descriptor.options;\n\n          const { sceneStyle } =\n            sceneStyleInterpolator?.({\n              current: tabAnims[route.key],\n            }) ?? {};\n\n          const animationEnabled = hasAnimation(descriptor.options);\n          const activityState = isFocused\n            ? STATE_ON_TOP // the screen is on top after the transition\n            : animationEnabled // is animation is not enabled, immediately move to inactive state\n            ? tabAnims[route.key].interpolate({\n                inputRange: [0, 1 - EPSILON, 1],\n                outputRange: [\n                  STATE_TRANSITIONING_OR_BELOW_TOP, // screen visible during transition\n                  STATE_TRANSITIONING_OR_BELOW_TOP,\n                  STATE_INACTIVE, // the screen is detached after transition\n                ],\n                extrapolate: 'extend',\n              })\n            : STATE_INACTIVE;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              active={activityState}\n              enabled={detachInactiveScreens}\n              freezeOnBlur={freezeOnBlur}\n            >\n              <BottomTabBarHeightContext.Provider\n                value={tabBarPosition === 'bottom' ? tabBarHeight : 0}\n              >\n                <Screen\n                  focused={isFocused}\n                  route={descriptor.route}\n                  navigation={descriptor.navigation}\n                  headerShown={headerShown}\n                  headerStatusBarHeight={headerStatusBarHeight}\n                  headerTransparent={headerTransparent}\n                  header={header({\n                    layout: dimensions,\n                    route: descriptor.route,\n                    navigation:\n                      descriptor.navigation as BottomTabNavigationProp<ParamListBase>,\n                    options: descriptor.options,\n                  })}\n                  style={[sceneContainerStyle, animationEnabled && sceneStyle]}\n                >\n                  {descriptor.render()}\n                </Screen>\n              </BottomTabBarHeightContext.Provider>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n      <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n        {renderTabBar()}\n      </BottomTabBarHeightCallbackContext.Provider>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  left: {\n    flexDirection: 'row-reverse',\n  },\n  right: {\n    flexDirection: 'row',\n  },\n  screens: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
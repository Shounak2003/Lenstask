{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"screen\", \"params\", \"action\", \"href\"],\n  _excluded2 = [\"variant\", \"color\", \"android_ripple\", \"style\", \"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { useLinkProps, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PlatformPressable } from \"./PlatformPressable\";\nimport { Text } from \"./Text\";\nvar BUTTON_RADIUS = 40;\nexport function Button(props) {\n  if ('screen' in props || 'action' in props) {\n    return React.createElement(ButtonLink, props);\n  } else {\n    return React.createElement(ButtonBase, props);\n  }\n}\nfunction ButtonLink(_ref) {\n  var screen = _ref.screen,\n    params = _ref.params,\n    action = _ref.action,\n    href = _ref.href,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var props = useLinkProps({\n    screen: screen,\n    params: params,\n    action: action,\n    href: href\n  });\n  return React.createElement(ButtonBase, _extends({}, rest, props));\n}\nfunction ButtonBase(_ref2) {\n  var _ref2$variant = _ref2.variant,\n    variant = _ref2$variant === void 0 ? 'tinted' : _ref2$variant,\n    customColor = _ref2.color,\n    android_ripple = _ref2.android_ripple,\n    style = _ref2.style,\n    children = _ref2.children,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors,\n    fonts = _useTheme.fonts;\n  var color = customColor != null ? customColor : colors.primary;\n  var backgroundColor;\n  var textColor;\n  switch (variant) {\n    case 'plain':\n      backgroundColor = 'transparent';\n      textColor = color;\n      break;\n    case 'tinted':\n      backgroundColor = Color(color).fade(0.85).string();\n      textColor = color;\n      break;\n    case 'filled':\n      backgroundColor = color;\n      textColor = Color(color).isDark() ? 'white' : Color(color).darken(0.71).string();\n      break;\n  }\n  return React.createElement(PlatformPressable, _extends({}, rest, {\n    style: [{\n      backgroundColor: backgroundColor\n    }, styles.button, style],\n    android_ripple: _objectSpread({\n      radius: BUTTON_RADIUS,\n      color: Color(textColor).fade(0.85).string()\n    }, android_ripple)\n  }), React.createElement(Text, {\n    style: [{\n      color: textColor\n    }, fonts.regular, styles.text]\n  }, children));\n}\nvar styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    borderRadius: BUTTON_RADIUS\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    letterSpacing: 0.1,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["useLinkProps","useTheme","Color","React","StyleSheet","PlatformPressable","Text","BUTTON_RADIUS","Button","props","createElement","ButtonLink","ButtonBase","_ref","screen","params","action","href","rest","_objectWithoutProperties","_excluded","_extends","_ref2","_ref2$variant","variant","customColor","color","android_ripple","style","children","_excluded2","_useTheme","colors","fonts","primary","backgroundColor","textColor","fade","string","isDark","darken","styles","button","_objectSpread","radius","regular","text","create","paddingHorizontal","paddingVertical","borderRadius","fontSize","lineHeight","letterSpacing","textAlign"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/elements/src/Button.tsx"],"sourcesContent":["import { useLinkProps, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport {\n  PlatformPressable,\n  type Props as PlatformPressableProps,\n} from './PlatformPressable';\nimport { Text } from './Text';\n\ntype BaseProps = Omit<PlatformPressableProps, 'children'> & {\n  variant?: 'plain' | 'tinted' | 'filled';\n  color?: string;\n  children: string | string[];\n};\n\ntype LinkProps = Omit<BaseProps, 'onPress'> &\n  Parameters<typeof useLinkProps>[0];\n\nconst BUTTON_RADIUS = 40;\n\nexport function Button(props: BaseProps | LinkProps) {\n  if ('screen' in props || 'action' in props) {\n    return <ButtonLink {...props} />;\n  } else {\n    return <ButtonBase {...props} />;\n  }\n}\n\nfunction ButtonLink({ screen, params, action, href, ...rest }: LinkProps) {\n  // @ts-expect-error: This is already type-checked by the prop types\n  const props = useLinkProps({ screen, params, action, href });\n\n  return <ButtonBase {...rest} {...props} />;\n}\n\nfunction ButtonBase({\n  variant = 'tinted',\n  color: customColor,\n  android_ripple,\n  style,\n  children,\n  ...rest\n}: BaseProps) {\n  const { colors, fonts } = useTheme();\n\n  const color = customColor ?? colors.primary;\n\n  let backgroundColor;\n  let textColor;\n\n  switch (variant) {\n    case 'plain':\n      backgroundColor = 'transparent';\n      textColor = color;\n      break;\n    case 'tinted':\n      backgroundColor = Color(color).fade(0.85).string();\n      textColor = color;\n      break;\n    case 'filled':\n      backgroundColor = color;\n      textColor = Color(color).isDark()\n        ? 'white'\n        : Color(color).darken(0.71).string();\n      break;\n  }\n\n  return (\n    <PlatformPressable\n      {...rest}\n      style={[{ backgroundColor }, styles.button, style]}\n      android_ripple={{\n        radius: BUTTON_RADIUS,\n        color: Color(textColor).fade(0.85).string(),\n        ...android_ripple,\n      }}\n    >\n      <Text style={[{ color: textColor }, fonts.regular, styles.text]}>\n        {children}\n      </Text>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    borderRadius: BUTTON_RADIUS,\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    letterSpacing: 0.1,\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
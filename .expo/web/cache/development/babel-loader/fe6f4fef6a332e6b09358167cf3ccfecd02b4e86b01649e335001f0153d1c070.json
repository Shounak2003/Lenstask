{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"href\", \"children\", \"style\", \"onPress\", \"accessibilityRole\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { getLabel, Label, PlatformPressable } from '@react-navigation/elements';\nimport { useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TabBarIcon } from \"./TabBarIcon\";\nexport function BottomTabItem(_ref) {\n  var route = _ref.route,\n    href = _ref.href,\n    focused = _ref.focused,\n    descriptor = _ref.descriptor,\n    label = _ref.label,\n    icon = _ref.icon,\n    badge = _ref.badge,\n    badgeStyle = _ref.badgeStyle,\n    _ref$button = _ref.button,\n    button = _ref$button === void 0 ? function (_ref2) {\n      var href = _ref2.href,\n        children = _ref2.children,\n        style = _ref2.style,\n        onPress = _ref2.onPress,\n        accessibilityRole = _ref2.accessibilityRole,\n        rest = _objectWithoutProperties(_ref2, _excluded);\n      return React.createElement(PlatformPressable, _extends({}, rest, {\n        android_ripple: {\n          borderless: true\n        },\n        pressOpacity: 1,\n        href: href,\n        accessibilityRole: accessibilityRole,\n        onPress: onPress,\n        style: style\n      }), children);\n    } : _ref$button,\n    accessibilityLabel = _ref.accessibilityLabel,\n    testID = _ref.testID,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    horizontal = _ref.horizontal,\n    customActiveTintColor = _ref.activeTintColor,\n    customInactiveTintColor = _ref.inactiveTintColor,\n    _ref$activeBackground = _ref.activeBackgroundColor,\n    activeBackgroundColor = _ref$activeBackground === void 0 ? 'transparent' : _ref$activeBackground,\n    _ref$inactiveBackgrou = _ref.inactiveBackgroundColor,\n    inactiveBackgroundColor = _ref$inactiveBackgrou === void 0 ? 'transparent' : _ref$inactiveBackgrou,\n    _ref$showLabel = _ref.showLabel,\n    showLabel = _ref$showLabel === void 0 ? true : _ref$showLabel,\n    allowFontScaling = _ref.allowFontScaling,\n    labelStyle = _ref.labelStyle,\n    iconStyle = _ref.iconStyle,\n    style = _ref.style;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  var inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n  var renderLabel = function renderLabel(_ref3) {\n    var focused = _ref3.focused;\n    if (showLabel === false) {\n      return null;\n    }\n    var color = focused ? activeTintColor : inactiveTintColor;\n    if (typeof label !== 'string') {\n      var options = descriptor.options;\n      var children = getLabel({\n        label: typeof options.tabBarLabel === 'string' ? options.tabBarLabel : undefined,\n        title: options.title\n      }, route.name);\n      return label({\n        focused: focused,\n        color: color,\n        position: horizontal ? 'beside-icon' : 'below-icon',\n        children: children\n      });\n    }\n    return React.createElement(Label, {\n      style: [horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n      allowFontScaling: allowFontScaling,\n      tintColor: color\n    }, label);\n  };\n  var renderIcon = function renderIcon(_ref4) {\n    var focused = _ref4.focused;\n    if (icon === undefined) {\n      return null;\n    }\n    var activeOpacity = focused ? 1 : 0;\n    var inactiveOpacity = focused ? 0 : 1;\n    return React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n  var scene = {\n    route: route,\n    focused: focused\n  };\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    href: href,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor: backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nvar styles = StyleSheet.create({\n  tab: {\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20\n  }\n});","map":{"version":3,"names":["getLabel","Label","PlatformPressable","useTheme","Color","React","Platform","StyleSheet","TabBarIcon","BottomTabItem","_ref","route","href","focused","descriptor","label","icon","badge","badgeStyle","_ref$button","button","_ref2","children","style","onPress","accessibilityRole","rest","_objectWithoutProperties","_excluded","createElement","_extends","android_ripple","borderless","pressOpacity","accessibilityLabel","testID","onLongPress","horizontal","customActiveTintColor","activeTintColor","customInactiveTintColor","inactiveTintColor","_ref$activeBackground","activeBackgroundColor","_ref$inactiveBackgrou","inactiveBackgroundColor","_ref$showLabel","showLabel","allowFontScaling","labelStyle","iconStyle","_useTheme","colors","undefined","primary","text","mix","card","hex","renderLabel","_ref3","color","options","tabBarLabel","title","name","position","styles","labelBeside","labelBeneath","tintColor","renderIcon","_ref4","activeOpacity","inactiveOpacity","scene","backgroundColor","select","ios","default","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","create","alignItems","justifyContent","flexDirection","fontSize","marginLeft"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabItem.tsx"],"sourcesContent":["import { getLabel, Label, PlatformPressable } from '@react-navigation/elements';\nimport { type Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport {\n  type GestureResponderEvent,\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  type TextStyle,\n  type ViewStyle,\n} from 'react-native';\n\nimport type {\n  BottomTabBarButtonProps,\n  BottomTabDescriptor,\n  LabelPosition,\n} from '../types';\nimport { TabBarIcon } from './TabBarIcon';\n\ntype Props = {\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The `href` to use for the anchor tag on web\n   */\n  href?: string;\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The descriptor object for the route.\n   */\n  descriptor: BottomTabDescriptor;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: {\n        focused: boolean;\n        color: string;\n        position: LabelPosition;\n        children: string;\n      }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Text to show in a badge on the tab icon.\n   */\n  badge?: number | string;\n  /**\n   * Custom style for the badge.\n   */\n  badgeStyle?: StyleProp<TextStyle>;\n  /**\n   * The button for the tab. Uses a `Pressable` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the icon element.\n   */\n  iconStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport function BottomTabItem({\n  route,\n  href,\n  focused,\n  descriptor,\n  label,\n  icon,\n  badge,\n  badgeStyle,\n  button = ({\n    href,\n    children,\n    style,\n    onPress,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    return (\n      <PlatformPressable\n        {...rest}\n        android_ripple={{ borderless: true }}\n        pressOpacity={1}\n        href={href}\n        accessibilityRole={accessibilityRole}\n        onPress={onPress}\n        style={style}\n      >\n        {children}\n      </PlatformPressable>\n    );\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label !== 'string') {\n      const { options } = descriptor;\n      const children = getLabel(\n        {\n          label:\n            typeof options.tabBarLabel === 'string'\n              ? options.tabBarLabel\n              : undefined,\n          title: options.title,\n        },\n        route.name\n      );\n\n      return label({\n        focused,\n        color,\n        position: horizontal ? 'beside-icon' : 'below-icon',\n        children,\n      });\n    }\n\n    return (\n      <Label\n        style={[\n          horizontal ? styles.labelBeside : styles.labelBeneath,\n          labelStyle,\n        ]}\n        allowFontScaling={allowFontScaling}\n        tintColor={color}\n      >\n        {label}\n      </Label>\n    );\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        horizontal={horizontal}\n        badge={badge}\n        badgeStyle={badgeStyle}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={iconStyle}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    href,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({ ios: 'button', default: 'tab' }),\n    accessibilityState: { selected: focused },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  labelBeneath: {\n    fontSize: 10,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
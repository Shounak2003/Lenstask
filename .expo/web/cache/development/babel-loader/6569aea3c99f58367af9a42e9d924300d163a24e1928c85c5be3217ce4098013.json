{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\"],\n  _excluded2 = [\"enabled\", \"active\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nexport var MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var _Screens;\n  var enabled = _ref.enabled,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if ((_Screens = Screens) != null && _Screens.screensEnabled != null && _Screens.screensEnabled()) {\n    return React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return React.createElement(View, rest);\n};\nexport function MaybeScreen(_ref2) {\n  var _Screens2;\n  var enabled = _ref2.enabled,\n    active = _ref2.active,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  if ((_Screens2 = Screens) != null && _Screens2.screensEnabled != null && _Screens2.screensEnabled()) {\n    return React.createElement(Screens.Screen, _extends({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n  return React.createElement(View, rest);\n}","map":{"version":3,"names":["React","View","Screens","require","e","MaybeScreenContainer","_ref","_Screens","enabled","rest","_objectWithoutProperties","_excluded","screensEnabled","createElement","ScreenContainer","_extends","MaybeScreen","_ref2","_Screens2","active","_excluded2","Screen","activityState"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/bottom-tabs/src/views/ScreenFallback.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  type StyleProp,\n  View,\n  type ViewProps,\n  type ViewStyle,\n} from 'react-native';\n\ntype Props = {\n  enabled: boolean;\n  active: 0 | 1 | 2 | Animated.AnimatedInterpolation<0 | 1>;\n  children: React.ReactNode;\n  freezeOnBlur?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  hasTwoStates: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens?.screensEnabled?.()) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport function MaybeScreen({ enabled, active, ...rest }: ViewProps & Props) {\n  if (Screens?.screensEnabled?.()) {\n    return (\n      <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAiB9B,IAAIC,OAA0D;AAE9D,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3C,CAAC,CAAC,OAAOC,CAAC,EAAE,CACV;AAGF,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAGC,IAAA,EAO9B;EAAA,IAAAC,QAAA;EAAA,IANJC,OAAO,GAMRF,IAAA,CANCE,OAAO;IACJC,IAAA,GAAAC,wBAAA,CAKJJ,IAAA,EAAAK,SAAA;EACC,KAAAJ,QAAA,GAAIL,OAAO,aAAPK,QAAA,CAASK,cAAc,YAAvBL,QAAA,CAASK,cAAc,CAAG,CAAC,EAAE;IAC/B,OAAOZ,KAAA,CAAAa,aAAA,CAACX,OAAO,CAACY,eAAe,EAAAC,QAAA;MAACP,OAAO,EAAEA;IAAQ,GAAKC,IAAI,CAAG,CAAC;EAChE;EAEA,OAAOT,KAAA,CAAAa,aAAA,CAACZ,IAAI,EAAKQ,IAAO,CAAC;AAC3B,CAAC;AAED,OAAO,SAASO,WAAWA,CAAAC,KAAA,EAAkD;EAAA,IAAAC,SAAA;EAAA,IAA/CV,OAAO,GAAsCS,KAAA,CAA7CT,OAAO;IAAEW,MAAM,GAA8BF,KAAA,CAApCE,MAAM;IAAKV,IAAA,GAAAC,wBAAA,CAAyBO,KAAA,EAAAG,UAAA;EACzE,KAAAF,SAAA,GAAIhB,OAAO,aAAPgB,SAAA,CAASN,cAAc,YAAvBM,SAAA,CAASN,cAAc,CAAG,CAAC,EAAE;IAC/B,OACEZ,KAAA,CAAAa,aAAA,CAACX,OAAO,CAACmB,MAAM,EAAAN,QAAA;MAACP,OAAO,EAAEA,OAAQ;MAACc,aAAa,EAAEH;IAAO,GAAKV,IAAI,CAAG,CAAC;EAEzE;EAEA,OAAOT,KAAA,CAAAa,aAAA,CAACZ,IAAI,EAAKQ,IAAO,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
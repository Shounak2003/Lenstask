{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFeed, useSession } from \"../../lib/lens-sdk\";\nimport Text from \"../../components/Text\";\nimport FeedList from \"./FeedList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function HomeScreen() {\n  var _profile;\n  var _useSession = useSession(),\n    session = _useSession.data;\n  var _useFeed = useFeed({\n      where: {\n        for: (_profile = session.profile) == null ? void 0 : _profile.id\n      }\n    }),\n    data = _useFeed.data,\n    loading = _useFeed.loading;\n  if ((data == null ? void 0 : data.length) === 0) {\n    return _jsx(View, {\n      style: styles.emptyContainer,\n      children: loading ? _jsx(Text, {\n        children: \"Loading...\"\n      }) : _jsx(Text, {\n        children: \"Your feed is empty \\u2639\\uFE0F\"\n      })\n    });\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FeedList, {\n      feed: data\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginHorizontal: 20\n  },\n  emptyContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","useFeed","useSession","Text","FeedList","jsx","_jsx","HomeScreen","_profile","_useSession","session","data","_useFeed","where","for","profile","id","loading","length","style","styles","emptyContainer","children","container","feed","create","flex","marginHorizontal","alignItems","justifyContent"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/src/features/home/HomeScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useFeed, useSession, ProfileSession } from '../../lib/lens-sdk';\nimport Text from '../../components/Text';\nimport FeedList from './FeedList';\n\nexport default function HomeScreen() {\n  const { data: session } = useSession();\n\n  // Get the feed for the logged in profile\n  const { data, loading } = useFeed({\n    where: {\n      for: (session as ProfileSession).profile?.id,\n    },\n  });\n\n  // If no data, feed is either loading or empty (not following anyone)\n  if (data?.length === 0) {\n    return (\n      <View style={styles.emptyContainer}>\n        {loading ? <Text>Loading...</Text> : <Text>Your feed is empty ☹️</Text>}\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <FeedList feed={data} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginHorizontal: 20,\n  },\n  emptyContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,OAAO,EAAEC,UAAU;AAC5B,OAAOC,IAAI;AACX,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAElC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAA,IAAAC,QAAA;EACnC,IAAAC,WAAA,GAA0BP,UAAU,CAAC,CAAC;IAAxBQ,OAAO,GAAAD,WAAA,CAAbE,IAAI;EAGZ,IAAAC,QAAA,GAA0BX,OAAO,CAAC;MAChCY,KAAK,EAAE;QACLC,GAAG,GAAAN,QAAA,GAAGE,OAAO,CAAoBK,OAAO,qBAAnCP,QAAA,CAAqCQ;MAC5C;IACF,CAAC,CAAC;IAJML,IAAI,GAAAC,QAAA,CAAJD,IAAI;IAAEM,OAAO,GAAAL,QAAA,CAAPK,OAAO;EAOrB,IAAI,CAAAN,IAAI,oBAAJA,IAAI,CAAEO,MAAM,MAAK,CAAC,EAAE;IACtB,OACEZ,IAAA,CAACN,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAC,QAAA,EAChCL,OAAO,GAAGX,IAAA,CAACH,IAAI;QAAAmB,QAAA,EAAC;MAAU,CAAM,CAAC,GAAGhB,IAAA,CAACH,IAAI;QAAAmB,QAAA,EAAC;MAAqB,CAAM;IAAC,CACnE,CAAC;EAEX;EAEA,OACEhB,IAAA,CAACN,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACG,SAAU;IAAAD,QAAA,EAC5BhB,IAAA,CAACF,QAAQ;MAACoB,IAAI,EAAEb;IAAK,CAAE;EAAC,CACpB,CAAC;AAEX;AAEA,IAAMS,MAAM,GAAGrB,UAAU,CAAC0B,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,gBAAgB,EAAE;EACpB,CAAC;EACDN,cAAc,EAAE;IACdK,IAAI,EAAE,CAAC;IACPE,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
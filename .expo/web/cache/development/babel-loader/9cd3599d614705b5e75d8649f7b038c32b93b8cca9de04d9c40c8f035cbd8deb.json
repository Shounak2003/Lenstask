{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport * as React from 'react';\nimport { NavigationBuilderContext } from \"./NavigationBuilderContext\";\nimport { NavigationContext } from \"./NavigationContext\";\nimport { NavigationRouteContext } from \"./NavigationRouteContext\";\nimport { SceneView } from \"./SceneView\";\nimport { useNavigationCache } from \"./useNavigationCache\";\nimport { useRouteCache } from \"./useRouteCache\";\nexport function useDescriptors(_ref) {\n  var state = _ref.state,\n    screens = _ref.screens,\n    navigation = _ref.navigation,\n    screenOptions = _ref.screenOptions,\n    onAction = _ref.onAction,\n    getState = _ref.getState,\n    setState = _ref.setState,\n    addListener = _ref.addListener,\n    addKeyedListener = _ref.addKeyedListener,\n    onRouteFocus = _ref.onRouteFocus,\n    router = _ref.router,\n    emitter = _ref.emitter;\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    options = _React$useState2[0],\n    setOptions = _React$useState2[1];\n  var _React$useContext = React.useContext(NavigationBuilderContext),\n    onDispatchAction = _React$useContext.onDispatchAction,\n    onOptionsChange = _React$useContext.onOptionsChange,\n    stackRef = _React$useContext.stackRef;\n  var context = React.useMemo(function () {\n    return {\n      navigation: navigation,\n      onAction: onAction,\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onRouteFocus: onRouteFocus,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange,\n      stackRef: stackRef\n    };\n  }, [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange, stackRef]);\n  var navigations = useNavigationCache({\n    state: state,\n    getState: getState,\n    navigation: navigation,\n    setOptions: setOptions,\n    router: router,\n    emitter: emitter\n  });\n  var routes = useRouteCache(state.routes);\n  return routes.reduce(function (acc, route, i) {\n    var config = screens[route.name];\n    var screen = config.props;\n    var navigation = navigations[route.key];\n    var optionsList = [screenOptions].concat(_toConsumableArray(config.options ? config.options.filter(Boolean) : []), [screen.options, options[route.key]]);\n    var customOptions = optionsList.reduce(function (acc, curr) {\n      return Object.assign(acc, typeof curr !== 'function' ? curr : curr({\n        route: route,\n        navigation: navigation\n      }));\n    }, {});\n    var clearOptions = function clearOptions() {\n      return setOptions(function (o) {\n        if (route.key in o) {\n          var _route$key = route.key,\n            _ = o[_route$key],\n            rest = _objectWithoutProperties(o, [_route$key].map(_toPropertyKey));\n          return rest;\n        }\n        return o;\n      });\n    };\n    var element = React.createElement(NavigationBuilderContext.Provider, {\n      key: route.key,\n      value: context\n    }, React.createElement(NavigationContext.Provider, {\n      value: navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(SceneView, {\n      navigation: navigation,\n      route: route,\n      screen: screen,\n      routeState: state.routes[i].state,\n      getState: getState,\n      setState: setState,\n      options: customOptions,\n      clearOptions: clearOptions\n    }))));\n    acc[route.key] = {\n      route: route,\n      navigation: navigation,\n      render: function render() {\n        return element;\n      },\n      options: customOptions\n    };\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["React","NavigationBuilderContext","NavigationContext","NavigationRouteContext","SceneView","useNavigationCache","useRouteCache","useDescriptors","_ref","state","screens","navigation","screenOptions","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","_React$useState","useState","_React$useState2","_slicedToArray","options","setOptions","_React$useContext","useContext","onDispatchAction","onOptionsChange","stackRef","context","useMemo","navigations","routes","reduce","acc","route","i","config","name","screen","props","key","optionsList","concat","_toConsumableArray","filter","Boolean","customOptions","curr","Object","assign","clearOptions","o","_route$key","_","rest","_objectWithoutProperties","map","_toPropertyKey","element","createElement","Provider","value","routeState","render"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/core/src/useDescriptors.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport {\n  type AddKeyedListener,\n  type AddListener,\n  NavigationBuilderContext,\n} from './NavigationBuilderContext';\nimport { NavigationContext } from './NavigationContext';\nimport { NavigationRouteContext } from './NavigationRouteContext';\nimport { SceneView } from './SceneView';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { useNavigationCache } from './useNavigationCache';\nimport { useRouteCache } from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  props: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n};\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?: ScreenOptionsOrCallback<ScreenOptions>;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, ScreenOptions>>(\n    {}\n  );\n  const { onDispatchAction, onOptionsChange, stackRef } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions, EventMap>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const config = screens[route.name];\n    const screen = config.props;\n    const navigation = navigations[route.key];\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      options[route.key],\n    ];\n\n    const customOptions = optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          // @ts-expect-error: we check for function but TS still complains\n          typeof curr !== 'function' ? curr : curr({ route, navigation })\n        ),\n      {} as ScreenOptions\n    );\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    const element = (\n      <NavigationBuilderContext.Provider key={route.key} value={context}>\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <SceneView\n              navigation={navigation}\n              route={route}\n              screen={screen}\n              routeState={state.routes[i].state}\n              getState={getState}\n              setState={setState}\n              options={customOptions}\n              clearOptions={clearOptions}\n            />\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      </NavigationBuilderContext.Provider>\n    );\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return element;\n      },\n      options: customOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConnectionController = void 0;
var _utils = require("valtio/utils");
var _vanilla = require("valtio/vanilla");
var _CoreHelperUtil = require("../utils/CoreHelperUtil");
var _StorageUtil = require("../utils/StorageUtil");
// -- Types --------------------------------------------- //

// -- State --------------------------------------------- //
const state = (0, _vanilla.proxy)({
  wcError: false
});

// -- Controller ---------------------------------------- //
const ConnectionController = exports.ConnectionController = {
  state,
  subscribeKey(key, callback) {
    return (0, _utils.subscribeKey)(state, key, callback);
  },
  _getClient() {
    if (!state._client) {
      throw new Error('ConnectionController client not set');
    }
    return state._client;
  },
  setClient(client) {
    state._client = (0, _vanilla.ref)(client);
  },
  connectWalletConnect() {
    state.wcPromise = this._getClient().connectWalletConnect(uri => {
      state.wcUri = uri;
      state.wcPairingExpiry = _CoreHelperUtil.CoreHelperUtil.getPairingExpiry();
    });
  },
  resetWcConnection() {
    state.wcUri = undefined;
    state.wcPairingExpiry = undefined;
    state.wcPromise = undefined;
    state.wcLinking = undefined;
    state.pressedWallet = undefined;
    _StorageUtil.StorageUtil.deleteWalletConnectDeepLink();
  },
  setWcLinking(wcLinking) {
    state.wcLinking = wcLinking;
  },
  removeWcLinking() {
    state.wcLinking = undefined;
  },
  setWcError(wcError) {
    state.wcError = wcError;
  },
  setPressedWallet(wallet) {
    state.pressedWallet = wallet;
  },
  removePressedWallet() {
    state.pressedWallet = undefined;
  },
  setRecentWallets(wallets) {
    state.recentWallets = wallets;
  },
  async disconnect() {
    await this._getClient().disconnect();
    this.resetWcConnection();
  }
};
//# sourceMappingURL=ConnectionController.js.map
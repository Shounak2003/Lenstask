{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport { useLogin } from '@lens-protocol/react-native';\nimport { useAccount } from 'wagmi';\nimport Button from \"../Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function LensButton(_ref) {\n  var profileId = _ref.profileId;\n  var _useAccount = useAccount(),\n    address = _useAccount.address;\n  var _useLogin = useLogin(),\n    login = _useLogin.execute,\n    loginLoading = _useLogin.loading;\n  var onLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var loginResult = yield login({\n        address: address,\n        profileId: profileId\n      });\n      if (loginResult.isFailure()) {\n        console.log('login error:', loginResult.error.message);\n        return;\n      }\n    });\n    return function onLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(Button, {\n    title: \"Sign in  \\uD83C\\uDF31\",\n    loading: loginLoading,\n    onPress: onLogin\n  });\n}","map":{"version":3,"names":["React","useLogin","useAccount","Button","jsx","_jsx","LensButton","_ref","profileId","_useAccount","address","_useLogin","login","execute","loginLoading","loading","onLogin","_ref2","_asyncToGenerator","loginResult","isFailure","console","log","error","message","apply","arguments","title","onPress"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/src/components/LensButton/index.tsx"],"sourcesContent":["import React from 'react';\nimport { useLogin } from '@lens-protocol/react-native';\nimport { useAccount } from 'wagmi';\nimport { ProfileId } from '../../lib/lens-sdk';\nimport Button from '../Button';\n\ntype LensButtonProps = {\n  profileId: ProfileId;\n};\n\n/**\n * Button used to sign in with Lens Protocol\n *\n * @param profileId Lens profile ID\n */\nexport function LensButton({ profileId }: LensButtonProps) {\n  const { address } = useAccount();\n  const { execute: login, loading: loginLoading } = useLogin();\n\n  const onLogin = async () => {\n    const loginResult = await login({\n      address: address,\n      profileId,\n    });\n\n    if (loginResult.isFailure()) {\n      console.log('login error:', loginResult.error.message);\n      return;\n    }\n  };\n\n  return (\n    <Button title=\"Sign in  ðŸŒ±\" loading={loginLoading} onPress={onLogin} />\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,UAAU,QAAQ,OAAO;AAElC,OAAOC,MAAM;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAW/B,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAAiC;EAAA,IAA9BC,SAAS,GAAAD,IAAA,CAATC,SAAS;EACpC,IAAAC,WAAA,GAAoBP,UAAU,CAAC,CAAC;IAAxBQ,OAAO,GAAAD,WAAA,CAAPC,OAAO;EACf,IAAAC,SAAA,GAAkDV,QAAQ,CAAC,CAAC;IAA3CW,KAAK,GAAAD,SAAA,CAAdE,OAAO;IAAkBC,YAAY,GAAAH,SAAA,CAArBI,OAAO;EAE/B,IAAMC,OAAO;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC1B,IAAMC,WAAW,SAASP,KAAK,CAAC;QAC9BF,OAAO,EAAEA,OAAO;QAChBF,SAAS,EAATA;MACF,CAAC,CAAC;MAEF,IAAIW,WAAW,CAACC,SAAS,CAAC,CAAC,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,WAAW,CAACI,KAAK,CAACC,OAAO,CAAC;QACtD;MACF;IACF,CAAC;IAAA,gBAVKR,OAAOA,CAAA;MAAA,OAAAC,KAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUZ;EAED,OACErB,IAAA,CAACF,MAAM;IAACwB,KAAK,EAAC,uBAAa;IAACZ,OAAO,EAAED,YAAa;IAACc,OAAO,EAAEZ;EAAQ,CAAE,CAAC;AAE3E"},"metadata":{},"sourceType":"module","externalDependencies":[]}
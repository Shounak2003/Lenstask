"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getThemedStyle = exports.getTextColor = exports.default = void 0;
var _reactNative = require("react-native");
var _ThemeUtil = require("../../utils/ThemeUtil");
const getThemedStyle = (theme, variant, pressed, disabled) => {
  if (disabled) {
    return {
      borderColor: theme['gray-glass-005'],
      backgroundColor: theme['gray-glass-020']
    };
  }
  if (pressed) {
    return {
      borderColor: variant === 'fill' ? theme['accent-090'] : theme['gray-glass-010'],
      backgroundColor: variant === 'fill' ? theme['accent-020'] : theme['gray-glass-020']
    };
  }
  return {
    borderColor: theme['gray-glass-010'],
    backgroundColor: variant === 'fill' ? theme['accent-100'] : theme['gray-glass-010']
  };
};
exports.getThemedStyle = getThemedStyle;
const getTextColor = (variant, disabled) => {
  if (disabled) {
    return 'fg-300';
  }
  if (variant === 'fill') {
    return 'inverse-100';
  }
  return 'fg-100';
};
exports.getTextColor = getTextColor;
var _default = exports.default = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    height: 40,
    alignItems: 'center',
    justifyContent: 'center',
    borderWidth: 1,
    borderRadius: 100,
    paddingHorizontal: _ThemeUtil.Spacing['2xs']
  },
  text: {
    paddingHorizontal: _ThemeUtil.Spacing['2xs']
  },
  image: {
    height: 24,
    width: 24,
    borderRadius: 100,
    borderWidth: 2,
    paddingLeft: _ThemeUtil.Spacing['4xs']
  },
  imageDisabled: {
    opacity: 0.4
  }
});
//# sourceMappingURL=styles.js.map
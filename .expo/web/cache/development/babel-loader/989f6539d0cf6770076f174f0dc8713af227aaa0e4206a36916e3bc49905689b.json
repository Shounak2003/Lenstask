{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"initialRouteName\", \"backBehavior\", \"children\", \"layout\", \"screenListeners\", \"screenOptions\", \"sceneContainerStyle\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { createNavigatorFactory, TabRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { BottomTabView } from \"../views/BottomTabView\";\nfunction BottomTabNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    backBehavior = _ref.backBehavior,\n    children = _ref.children,\n    layout = _ref.layout,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    sceneContainerStyle = _ref.sceneContainerStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useNavigationBuilder = useNavigationBuilder(TabRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      backBehavior: backBehavior,\n      children: children,\n      layout: layout,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions\n    }),\n    state = _useNavigationBuilder.state,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  return React.createElement(NavigationContent, null, React.createElement(BottomTabView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors,\n    sceneContainerStyle: sceneContainerStyle\n  })));\n}\nexport var createBottomTabNavigator = createNavigatorFactory(BottomTabNavigator);","map":{"version":3,"names":["createNavigatorFactory","TabRouter","useNavigationBuilder","React","BottomTabView","BottomTabNavigator","_ref","id","initialRouteName","backBehavior","children","layout","screenListeners","screenOptions","sceneContainerStyle","rest","_objectWithoutProperties","_excluded","_useNavigationBuilder","state","descriptors","navigation","NavigationContent","createElement","_extends","createBottomTabNavigator"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/bottom-tabs/src/navigators/createBottomTabNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  type DefaultNavigatorOptions,\n  type ParamListBase,\n  type TabActionHelpers,\n  type TabNavigationState,\n  TabRouter,\n  type TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  BottomTabNavigationConfig,\n  BottomTabNavigationEventMap,\n  BottomTabNavigationOptions,\n} from '../types';\nimport { BottomTabView } from '../views/BottomTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap\n> &\n  TabRouterOptions &\n  BottomTabNavigationConfig;\n\nfunction BottomTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  layout,\n  screenListeners,\n  screenOptions,\n  sceneContainerStyle,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      BottomTabNavigationOptions,\n      BottomTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      layout,\n      screenListeners,\n      screenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <BottomTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n        sceneContainerStyle={sceneContainerStyle}\n      />\n    </NavigationContent>\n  );\n}\n\nexport const createBottomTabNavigator = createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  BottomTabNavigationOptions,\n  BottomTabNavigationEventMap,\n  typeof BottomTabNavigator\n>(BottomTabNavigator);\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,SACEA,sBAAsB,EAKtBC,SAAS,EAETC,oBAAoB,QACf,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAO9B,SAASC,aAAa;AAWtB,SAASC,kBAAkBA,CAAAC,IAAA,EAUjB;EAAA,IATRC,EAAE,GASID,IAAA,CATNC,EAAE;IACFC,gBAAgB,GAQVF,IAAA,CARNE,gBAAgB;IAChBC,YAAY,GAONH,IAAA,CAPNG,YAAY;IACZC,QAAQ,GAMFJ,IAAA,CANNI,QAAQ;IACRC,MAAM,GAKAL,IAAA,CALNK,MAAM;IACNC,eAAe,GAITN,IAAA,CAJNM,eAAe;IACfC,aAAa,GAGPP,IAAA,CAHNO,aAAa;IACbC,mBAAmB,GAEbR,IAAA,CAFNQ,mBAAmB;IAChBC,IAAA,GAAAC,wBAAA,CACGV,IAAA,EAAAW,SAAA;EACN,IAAAC,qBAAA,GACEhB,oBAAoB,CAMlBD,SAAS,EAAE;MACXM,EAAE,EAAFA,EAAE;MACFC,gBAAgB,EAAhBA,gBAAgB;MAChBC,YAAY,EAAZA,YAAY;MACZC,QAAQ,EAARA,QAAQ;MACRC,MAAM,EAANA,MAAM;MACNC,eAAe,EAAfA,eAAe;MACfC,aAAA,EAAAA;IACF,CAAC,CAAC;IAfIM,KAAK,GAAAD,qBAAA,CAALC,KAAK;IAAEC,WAAW,GAAAF,qBAAA,CAAXE,WAAW;IAAEC,UAAU,GAAAH,qBAAA,CAAVG,UAAU;IAAEC,iBAAA,GAAAJ,qBAAA,CAAAI,iBAAA;EAiBxC,OACEnB,KAAA,CAAAoB,aAAA,CAACD,iBAAiB,QAChBnB,KAAA,CAAAoB,aAAA,CAACnB,aAAa,EAAAoB,QAAA,KACRT,IAAI;IACRI,KAAK,EAAEA,KAAM;IACbE,UAAU,EAAEA,UAAW;IACvBD,WAAW,EAAEA,WAAY;IACzBN,mBAAmB,EAAEA;EAAoB,EAC1C,CACgB,CAAC;AAExB;AAEA,OAAO,IAAMW,wBAAwB,GAAGzB,sBAAsB,CAK5DK,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
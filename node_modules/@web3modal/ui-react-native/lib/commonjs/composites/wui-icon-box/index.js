"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconBox = IconBox;
var _reactNative = require("react-native");
var _wuiIcon = require("../../components/wui-icon");
var _useTheme = require("../../hooks/useTheme");
var _ThemeUtil = require("../../utils/ThemeUtil");
var _styles = _interopRequireDefault(require("./styles"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function IconBox(_ref) {
  let {
    size,
    iconColor = 'fg-100',
    icon,
    background,
    backgroundColor,
    border,
    style
  } = _ref;
  const Theme = (0, _useTheme.useTheme)();
  let iconSize = 'xxs';
  switch (size) {
    case 'lg':
      iconSize = 'lg';
      break;
    case 'md':
      iconSize = 'sm';
      break;
    case 'sm':
      iconSize = 'xs';
      break;
    default:
      iconSize = 'xxs';
  }
  let boxSize;
  switch (size) {
    case 'lg':
      boxSize = 40;
      break;
    case 'md':
      boxSize = 32;
      break;
    default:
      boxSize = 24;
  }
  const borderRadius = size === 'lg' ? 'xxs' : '3xl';
  const backgroundStyle = {
    backgroundColor: background && backgroundColor ? Theme[backgroundColor] : background ? `${Theme[iconColor]}1E` : 'transparent',
    borderRadius: _ThemeUtil.BorderRadius[borderRadius]
  };
  const containerSize = boxSize + (border ? 4 : 0);
  return /*#__PURE__*/React.createElement(_reactNative.View, {
    style: [_styles.default.box, backgroundStyle, {
      height: containerSize,
      width: containerSize
    }, border && {
      borderColor: Theme['bg-125']
    }, border && _styles.default.border, style]
  }, /*#__PURE__*/React.createElement(_wuiIcon.Icon, {
    size: iconSize,
    color: iconColor,
    name: icon
  }));
}
//# sourceMappingURL=index.js.map
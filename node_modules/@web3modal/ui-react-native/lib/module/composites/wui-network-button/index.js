import { useRef } from 'react';
import { Animated, Pressable } from 'react-native';
import { Image } from '../../components/wui-image';
import { Text } from '../../components/wui-text';
import { useTheme } from '../../hooks/useTheme';
import { IconBox } from '../wui-icon-box';
import styles, { getThemedStyle, getTextColor } from './styles';
const AnimatedPressable = Animated.createAnimatedComponent(Pressable);
export function NetworkButton(_ref) {
  let {
    imageSrc,
    imageHeaders,
    disabled,
    onPress,
    variant = 'fill',
    style,
    children
  } = _ref;
  const Theme = useTheme();
  const colorAnimation = useRef(new Animated.Value(0));
  const themedNormalStyle = getThemedStyle(Theme, variant, false, disabled);
  const themedPressedStyle = getThemedStyle(Theme, variant, true, disabled);
  const color = getTextColor(variant, disabled);
  const onPressIn = () => {
    Animated.timing(colorAnimation.current, {
      toValue: 1,
      useNativeDriver: false,
      duration: 200
    }).start();
  };
  const onPressOut = () => {
    Animated.timing(colorAnimation.current, {
      toValue: 0,
      useNativeDriver: false,
      duration: 200
    }).start();
  };
  const backgroundColor = colorAnimation.current.interpolate({
    inputRange: [0, 1],
    outputRange: [themedNormalStyle.backgroundColor, themedPressedStyle.backgroundColor]
  });
  const borderColor = colorAnimation.current.interpolate({
    inputRange: [0, 1],
    outputRange: [themedNormalStyle.borderColor, themedPressedStyle.borderColor]
  });
  return /*#__PURE__*/React.createElement(AnimatedPressable, {
    style: [styles.container, {
      backgroundColor,
      borderColor
    }, style],
    onPress: onPress,
    onPressIn: onPressIn,
    onPressOut: onPressOut
  }, imageSrc ? /*#__PURE__*/React.createElement(Image, {
    style: [styles.image, {
      borderColor: Theme['gray-glass-010']
    }, disabled && styles.imageDisabled],
    source: imageSrc,
    headers: imageHeaders
  }) : /*#__PURE__*/React.createElement(IconBox, {
    icon: "networkPlaceholder",
    background: true,
    iconColor: color,
    size: "sm"
  }), /*#__PURE__*/React.createElement(Text, {
    style: styles.text,
    variant: "paragraph-600",
    color: color
  }, children));
}
//# sourceMappingURL=index.js.map
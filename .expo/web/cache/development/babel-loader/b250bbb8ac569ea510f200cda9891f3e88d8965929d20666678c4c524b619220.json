{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"href\", \"icon\", \"label\", \"labelStyle\", \"focused\", \"allowFontScaling\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"style\", \"onPress\", \"pressColor\", \"pressOpacity\", \"testID\", \"accessibilityLabel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { PlatformPressable, Text } from '@react-navigation/elements';\nimport { useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport function DrawerItem(props) {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors,\n    fonts = _useTheme.fonts;\n  var href = props.href,\n    icon = props.icon,\n    label = props.label,\n    labelStyle = props.labelStyle,\n    _props$focused = props.focused,\n    focused = _props$focused === void 0 ? false : _props$focused,\n    allowFontScaling = props.allowFontScaling,\n    _props$activeTintColo = props.activeTintColor,\n    activeTintColor = _props$activeTintColo === void 0 ? colors.primary : _props$activeTintColo,\n    _props$inactiveTintCo = props.inactiveTintColor,\n    inactiveTintColor = _props$inactiveTintCo === void 0 ? Color(colors.text).alpha(0.68).rgb().string() : _props$inactiveTintCo,\n    _props$activeBackgrou = props.activeBackgroundColor,\n    activeBackgroundColor = _props$activeBackgrou === void 0 ? Color(activeTintColor).alpha(0.12).rgb().string() : _props$activeBackgrou,\n    _props$inactiveBackgr = props.inactiveBackgroundColor,\n    inactiveBackgroundColor = _props$inactiveBackgr === void 0 ? 'transparent' : _props$inactiveBackgr,\n    style = props.style,\n    onPress = props.onPress,\n    pressColor = props.pressColor,\n    pressOpacity = props.pressOpacity,\n    testID = props.testID,\n    accessibilityLabel = props.accessibilityLabel,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n    _StyleSheet$flatten$b = _StyleSheet$flatten.borderRadius,\n    borderRadius = _StyleSheet$flatten$b === void 0 ? 4 : _StyleSheet$flatten$b;\n  var color = focused ? activeTintColor : inactiveTintColor;\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  var iconNode = icon ? icon({\n    size: 24,\n    focused: focused,\n    color: color\n  }) : null;\n  return React.createElement(View, _extends({\n    collapsable: false\n  }, rest, {\n    style: [styles.container, {\n      borderRadius: borderRadius,\n      backgroundColor: backgroundColor\n    }, style]\n  }), React.createElement(PlatformPressable, {\n    testID: testID,\n    onPress: onPress,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: focused\n    },\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    href: href\n  }, React.createElement(View, {\n    style: [styles.wrapper, {\n      borderRadius: borderRadius\n    }]\n  }, iconNode, React.createElement(View, {\n    style: [styles.label, {\n      marginLeft: iconNode ? 32 : 0,\n      marginVertical: 5\n    }]\n  }, typeof label === 'string' ? React.createElement(Text, {\n    numberOfLines: 1,\n    allowFontScaling: allowFontScaling,\n    style: [{\n      color: color\n    }, fonts.medium, labelStyle]\n  }, label) : label({\n    color: color,\n    focused: focused\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden'\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32,\n    flex: 1\n  }\n});","map":{"version":3,"names":["PlatformPressable","Text","useTheme","Color","React","StyleSheet","View","DrawerItem","props","_useTheme","colors","fonts","href","icon","label","labelStyle","_props$focused","focused","allowFontScaling","_props$activeTintColo","activeTintColor","primary","_props$inactiveTintCo","inactiveTintColor","text","alpha","rgb","string","_props$activeBackgrou","activeBackgroundColor","_props$inactiveBackgr","inactiveBackgroundColor","style","onPress","pressColor","pressOpacity","testID","accessibilityLabel","rest","_objectWithoutProperties","_excluded","_StyleSheet$flatten","flatten","_StyleSheet$flatten$b","borderRadius","color","backgroundColor","iconNode","size","createElement","_extends","collapsable","styles","container","accessibilityRole","accessibilityState","selected","wrapper","marginLeft","marginVertical","numberOfLines","medium","create","marginHorizontal","overflow","flexDirection","alignItems","padding","marginRight","flex"],"sources":["/home/shounak/Desktop/Letsgo/new/web3-cross-platform-lens/node_modules/@react-navigation/drawer/src/views/DrawerItem.tsx"],"sourcesContent":["import { PlatformPressable, Text } from '@react-navigation/elements';\nimport { type Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  type StyleProp,\n  StyleSheet,\n  type TextStyle,\n  View,\n  type ViewStyle,\n} from 'react-native';\n\ntype Props = {\n  /**\n   * The route object which should be specified by the drawer item.\n   */\n  route: Route<string>;\n  /**\n   * The `href` to use for the anchor tag on web\n   */\n  href?: string;\n  /**\n   * The label text of the item.\n   */\n  label:\n    | string\n    | ((props: { focused: boolean; color: string }) => React.ReactNode);\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  focused?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress: () => void;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Color of the touchable effect on press.\n   * Only supported on Android.\n   *\n   * @platform android\n   */\n  pressColor?: string;\n  /**\n   * Opacity of the touchable effect on press.\n   * Only supported on iOS.\n   *\n   * @platform ios\n   */\n  pressOpacity?: number;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Whether label font should scale to respect Text Size accessibility settings.\n   */\n  allowFontScaling?: boolean;\n\n  /**\n   * Accessibility label for drawer item.\n   */\n  accessibilityLabel?: string;\n  /**\n   * ID to locate this drawer item in tests.\n   */\n  testID?: string;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n */\nexport function DrawerItem(props: Props) {\n  const { colors, fonts } = useTheme();\n\n  const {\n    href,\n    icon,\n    label,\n    labelStyle,\n    focused = false,\n    allowFontScaling,\n    activeTintColor = colors.primary,\n    inactiveTintColor = Color(colors.text).alpha(0.68).rgb().string(),\n    activeBackgroundColor = Color(activeTintColor).alpha(0.12).rgb().string(),\n    inactiveBackgroundColor = 'transparent',\n    style,\n    onPress,\n    pressColor,\n    pressOpacity,\n    testID,\n    accessibilityLabel,\n    ...rest\n  } = props;\n\n  const { borderRadius = 4 } = StyleSheet.flatten(style || {});\n  const color = focused ? activeTintColor : inactiveTintColor;\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  const iconNode = icon ? icon({ size: 24, focused, color }) : null;\n\n  return (\n    <View\n      collapsable={false}\n      {...rest}\n      style={[styles.container, { borderRadius, backgroundColor }, style]}\n    >\n      <PlatformPressable\n        testID={testID}\n        onPress={onPress}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: focused }}\n        pressColor={pressColor}\n        pressOpacity={pressOpacity}\n        href={href}\n      >\n        <View style={[styles.wrapper, { borderRadius }]}>\n          {iconNode}\n          <View\n            style={[\n              styles.label,\n              { marginLeft: iconNode ? 32 : 0, marginVertical: 5 },\n            ]}\n          >\n            {typeof label === 'string' ? (\n              <Text\n                numberOfLines={1}\n                allowFontScaling={allowFontScaling}\n                style={[{ color }, fonts.medium, labelStyle]}\n              >\n                {label}\n              </Text>\n            ) : (\n              label({ color, focused })\n            )}\n          </View>\n        </View>\n      </PlatformPressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n    overflow: 'hidden',\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  label: {\n    marginRight: 32,\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}